name: Push Lambda Docker Image to ECR

on:
  push:
    branches:
      - main
    paths:
      - '.github/workflows/*'
      - 'vimeo-uploader-lambda/app.py'
      - 'vimeo-uploader-lambda/core/*'
      - 'vimeo-uploader-lambda/Dockerfile'
      - 'vimeo-uploader-lambda/requirements.txt'

permissions:
  id-token: write
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: vimeo-uploader-lambda
    steps:
    - uses: actions/checkout@v3
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        role-to-assume: arn:aws:iam::809645049664:role/github-action-ecr-role
        role-duration-seconds: 900
        aws-region: us-east-1
    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1
    - name: Download FFmpeg and unzip file
      run: |
        curl -L https://github.com/yt-dlp/FFmpeg-Builds/releases/download/latest/ffmpeg-master-latest-linux64-gpl.tar.xz \
          --connect-timeout 5 --max-time 5 --retry 5 --retry-delay 0 --output ffmpeg-master-latest-linux64-gpl.tar.xz
        tar -xvf ffmpeg-master-latest-linux64-gpl.tar.xz
    - name: Download and install the protobuf compiler
      run: |
        wget --tries=5 --connect-timeout=5 -O protoc-linux-x86_64.zip \
          https://github.com/protocolbuffers/protobuf/releases/download/v21.12/protoc-21.12-linux-x86_64.zip
        sudo apt-get install unzip
        unzip protoc-linux-x86_64.zip -d protoc-linux-x86_64
        echo "protoc-linux-x86_64/bin" >> $GITHUB_PATH
    - name: Generate protobuf
      run: |
        mkdir -p core/generated
        protoc --proto_path=proto -I=proto --python_out=core/generated proto/model.proto
    - name: Build, tag, and push docker image to Amazon ECR
      env:
        REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        REPOSITORY: vimeo-uploader
        IMAGE_TAG: ${{ github.sha }}
      run: |
        docker build . --file Dockerfile -t $REGISTRY/$REPOSITORY:$IMAGE_TAG -t $REGISTRY/$REPOSITORY:latest
        docker push $REGISTRY/$REPOSITORY:$IMAGE_TAG
    - name: Update Lambda function with image on Amazon ECR
      env:
        REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        REPOSITORY: vimeo-uploader
        IMAGE_TAG: ${{ github.sha }}
      run: |
        aws lambda update-function-code --function-name get-video-metadata --region us-east-1 \
          --image-uri $REGISTRY/$REPOSITORY:$IMAGE_TAG
        aws lambda update-function-code --function-name upload-thumbnail-image --region us-east-1 \
          --image-uri $REGISTRY/$REPOSITORY:$IMAGE_TAG
        aws lambda update-function-code --function-name process-video --region us-east-1 \
          --image-uri $REGISTRY/$REPOSITORY:$IMAGE_TAG
