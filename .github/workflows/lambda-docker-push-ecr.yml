name: Push Lambda Docker Image to ECR

on:
  workflow_run:
    workflows:
      - Run Python Sanity for Lambda
    types:
      - completed
    branches:
      - main
    paths:
      - vimeo-uploader-lambda/**

permissions:
  id-token: write
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: vimeo-uploader-lambda
    steps:
      - uses: actions/checkout@v3
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: arn:aws:iam::809645049664:role/github-action-ecr-role
          role-duration-seconds: 900
          aws-region: us-east-1
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
      - name: Download FFMpeg and unzip file
        run: |
          curl https://johnvansickle.com/ffmpeg/releases/ffmpeg-release-arm64-static.tar.xz -m 60 -o ffmpeg-release-arm64.tar.xz
          tar -xvf ffmpeg-release-arm64.tar.xz
      - name: Build, tag, and push docker image to Amazon ECR
        env:
          REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          REPOSITORY: vimeo-uploader
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build . --file Dockerfile -t $REGISTRY/$REPOSITORY:$IMAGE_TAG
          docker push $REGISTRY/$REPOSITORY:$IMAGE_TAG